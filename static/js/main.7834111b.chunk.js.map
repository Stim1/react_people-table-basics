{"version":3,"sources":["pages/NotFoundPage.tsx","pages/HomePage.tsx","components/PersonLink.tsx","components/Loader/Loader.tsx","api.ts","types/TableHeaders.ts","pages/PeoplePage.tsx","components/Navigation.tsx","App.tsx","components/Root.tsx","index.tsx"],"names":["NotFoundPage","className","HomePage","PersonLink","person","onSelect","to","slug","classNames","sex","onClick","name","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","TableHeaders","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","selectedPersonSlug","setSelectedPersonSlug","handleSelectPerson","localStorage","setItem","getParent","parentName","find","parent","useEffect","loadPeople","data","length","Object","values","map","header","born","died","motherName","fatherName","Navigation","getActive","isActive","role","App","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7834111b.chunk.js","sourcesContent":["export const NotFoundPage = () => (\n  <div>\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","export const HomePage = () => (\n  <div>\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PersonLinkProps } from '../types/PersonLinkProps';\n\nexport const PersonLink: React.FC<PersonLinkProps> = ({ person, onSelect }) => {\n  const handleClick = () => {\n    onSelect(person.slug);\n  };\n\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n      onClick={handleClick}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum TableHeaders {\n  Name = 'Name',\n  Sex = 'Sex',\n  Born = 'Born',\n  Died = 'Died',\n  Mother = 'Mother',\n  Father = 'Father',\n}\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from '../components/PersonLink';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { TableHeaders } from '../types/TableHeaders';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const [selectedPersonSlug, setSelectedPersonSlug] = useState<string>('');\n\n  const handleSelectPerson = (slug: string) => {\n    setSelectedPersonSlug(slug);\n    localStorage.setItem('selectedPerson', slug);\n  };\n\n  const getParent = (parentName: string | null) => {\n    return people.find((parent) => parent.name === parentName);\n  };\n\n  useEffect(() => {\n    const loadPeople = async () => {\n      try {\n        const data = await getPeople();\n\n        setPeople(data);\n      } catch (error) {\n        setErrorMessage('Something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n          {!isLoading && !errorMessage && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  {Object.values(TableHeaders).map((header) => (\n                    <th key={header}>\n                      {header}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={classNames({\n                      'has-background-warning':\n                      person.slug === selectedPersonSlug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink\n                        person={person}\n                        onSelect={handleSelectPerson}\n                      />\n                    </td>\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {getParent(person.motherName) ? (\n                        <PersonLink\n                          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                          person={getParent(person.motherName)!}\n                          onSelect={handleSelectPerson}\n                        />\n                      ) : (\n                        person.motherName || '-'\n                      )}\n                    </td>\n                    <td>\n                      {getParent(person.fatherName) ? (\n                        <PersonLink\n                          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                          person={getParent(person.fatherName)!}\n                          onSelect={handleSelectPerson}\n                        />\n                      ) : (\n                        person.fatherName || '-'\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => {\n  const getActive = (isActive:boolean) => `navbar-item ${isActive && 'has-background-grey-lighter'}`;\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => getActive(isActive)}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => getActive(isActive)}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { NotFoundPage } from '../pages/NotFoundPage';\nimport { HomePage } from '../pages/HomePage';\nimport { PeoplePage } from '../pages/PeoplePage';\nimport { App } from '../App';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":selectedPersonSlug?\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './components/Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}